{"version":3,"file":"component---src-pages-post-[id]-js-d3b215b5aacb0adc5638.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/extend/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-stringify-position/lib/index.js","webpack://gatsby-starter-default/./node_modules/vfile-message/index.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minpath.browser.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minproc.browser.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minurl.shared.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/minurl.browser.js","webpack://gatsby-starter-default/./node_modules/vfile/lib/index.js","webpack://gatsby-starter-default/./node_modules/bail/index.js","webpack://gatsby-starter-default/./node_modules/is-plain-obj/index.js","webpack://gatsby-starter-default/./node_modules/trough/index.js","webpack://gatsby-starter-default/./node_modules/unified/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-string/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-chunked/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-combine-extensions/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://gatsby-starter-default/./node_modules/micromark-util-character/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-space/index.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/content.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/document.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://gatsby-starter-default/./node_modules/micromark-util-subtokenize/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/content.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/flow.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/initialize/text.js","webpack://gatsby-starter-default/./node_modules/micromark-util-resolve-all/index.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/create-tokenizer.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/list.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-destination/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-label/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-title/index.js","webpack://gatsby-starter-default/./node_modules/micromark-factory-whitespace/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-normalize-identifier/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://gatsby-starter-default/./node_modules/micromark-util-html-tag-name/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://gatsby-starter-default/./node_modules/decode-named-character-reference/index.dom.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://gatsby-starter-default/./node_modules/micromark-util-classify-character/index.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://gatsby-starter-default/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/constructs.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/parse.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/preprocess.js","webpack://gatsby-starter-default/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://gatsby-starter-default/./node_modules/micromark-util-decode-string/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://gatsby-starter-default/./node_modules/micromark/lib/postprocess.js","webpack://gatsby-starter-default/./node_modules/remark-parse/index.js","webpack://gatsby-starter-default/./node_modules/remark-parse/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-builder/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-is/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-visit-parents/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-visit/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-position/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-definitions/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/traverse.js","webpack://gatsby-starter-default/./node_modules/micromark-util-sanitize-uri/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/wrap.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://gatsby-starter-default/./node_modules/trim-lines/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/index.js","webpack://gatsby-starter-default/./node_modules/unist-util-generated/lib/index.js","webpack://gatsby-starter-default/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://gatsby-starter-default/./node_modules/remark-rehype/lib/index.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/schema.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/merge.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/normalize.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/info.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/types.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/defined-info.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/create.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/xlink.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/xml.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/xmlns.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/aria.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/html.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/svg.js","webpack://gatsby-starter-default/./node_modules/property-information/index.js","webpack://gatsby-starter-default/./node_modules/react-markdown/lib/rehype-filter.js","webpack://gatsby-starter-default/./node_modules/hast-util-whitespace/index.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/find.js","webpack://gatsby-starter-default/./node_modules/property-information/lib/hast-to-react.js","webpack://gatsby-starter-default/./node_modules/style-to-object/index.mjs","webpack://gatsby-starter-default/./node_modules/react-markdown/lib/uri-transformer.js","webpack://gatsby-starter-default/./node_modules/react-markdown/lib/ast-to-react.js","webpack://gatsby-starter-default/./node_modules/comma-separated-tokens/index.js","webpack://gatsby-starter-default/./node_modules/space-separated-tokens/index.js","webpack://gatsby-starter-default/./node_modules/react-markdown/lib/react-markdown.js","webpack://gatsby-starter-default/./src/assets/images/empty-profile.png","webpack://gatsby-starter-default/./src/assets/images/Comment.png","webpack://gatsby-starter-default/./src/components/post/PostMain.js","webpack://gatsby-starter-default/./src/pages/post/[id].js","webpack://gatsby-starter-default/./node_modules/inline-style-parser/index.js","webpack://gatsby-starter-default/./node_modules/is-buffer/index.js","webpack://gatsby-starter-default/./node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","webpack://gatsby-starter-default/./node_modules/react-markdown/node_modules/react-is/index.js","webpack://gatsby-starter-default/./node_modules/style-to-object/index.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n */\n\n/**\n * @typedef {Array<Node> | string} ChildrenOrValue\n *   List to use as `children` or value to use as `value`.\n *\n * @typedef {Record<string, unknown>} Props\n *   Other fields to add to the node.\n */\n\n/**\n * Build a node.\n *\n * @param type\n *   Node type.\n * @param props\n *   Fields assigned to node.\n * @param value\n *   Children of node or value of `node` (cast to string).\n * @returns\n *   Built node.\n */\nexport const u =\n  /**\n   * @type {(\n   *   (<T extends string>(type: T) => {type: T}) &\n   *   (<T extends string, P extends Props>(type: T, props: P) => {type: T} & P) &\n   *   (<T extends string>(type: T, value: string) => {type: T, value: string}) &\n   *   (<T extends string, P extends Props>(type: T, props: P, value: string) => {type: T, value: string} & P) &\n   *   (<T extends string, C extends Array<Node>>(type: T, children: C) => {type: T, children: C}) &\n   *   (<T extends string, P extends Props, C extends Array<Node>>(type: T, props: P, children: C) => {type: T, children: C} & P)\n   * )}\n   */\n  (\n    /**\n     * @param {string} type\n     * @param {Props | ChildrenOrValue | null | undefined} [props]\n     * @param {ChildrenOrValue | null | undefined} [value]\n     * @returns {Node}\n     */\n    function (type, props, value) {\n      /** @type {Node} */\n      const node = {type: String(type)}\n\n      if (\n        (value === undefined || value === null) &&\n        (typeof props === 'string' || Array.isArray(props))\n      ) {\n        value = props\n      } else {\n        Object.assign(node, props)\n      }\n\n      if (Array.isArray(value)) {\n        // @ts-expect-error: create a parent.\n        node.children = value\n      } else if (value !== undefined && value !== null) {\n        // @ts-expect-error: create a literal.\n        node.value = String(value)\n      }\n\n      return node\n    }\n  )\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} MdastNode\n * @typedef {Extract<MdastNode, import('mdast').Parent>} MdastParent\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n *\n * @param {H} h\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} node\n * @param {MdastParent | null} parent\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @template {MdastNode} Node\n * @param {H} h\n * @param {Node} node\n * @returns {Node}\n */\nfunction returnNode(h, node) {\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {H} h\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').H} H\n\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').H} H\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @param {H} h\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @param {H} h\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @param {H} h\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @param {H} h\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n * @typedef {import('mdast').Parent} Parent\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').H} H\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {List} node\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').H} H\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @param {H} h\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').H} H\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @param {H} h\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').H} H\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @param {H} h\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').H} H\n */\n\n/**\n * @param {H} h\n * @param {ThematicBreak} [node]\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","export default __webpack_public_path__ + \"static/empty-profile-e7f7789886146886e9a6dae9556df17f.png\";","export default __webpack_public_path__ + \"static/Comment-19623016cb4e7dfeec202886130f26e3.png\";","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\n\nimport Lottie from \"react-lottie\";\nimport shapeAnimation from '../../assets/json/shape.json'\nimport emptyProfile from '../../assets/images/empty-profile.png'\nimport Comment from '../../assets/images/Comment.png'\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: shapeAnimation,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  \n\nconst PostMain = ({ newsfeedData }) => {\n    return (\n        <div className=\"flex h-screen\">\n            <div className=\"m-auto\">\n                <section>\n                    <div\n                        className=\" max-w-screen-xl py-16 sm:px-6\"\n                        style={{ borderColor: \"red\" }}\n                    >\n                        <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-2 lg:gap-16\">\n                            <div className=\"relative h-auto overflow-hidden rounded-lg sm:h-full lg:order-last lg:h-full\">\n                                <div className=\"flex items-center justify-center\">\n                                    <div style={{ zIndex: 10 }}>\n                                        <div className=\"mockup-phone border-primary \">\n                                            <div className=\"camera\"></div>\n                                            <div className=\"display\">\n                                                <div className=\"artboard artboard-demo phone-1\"\n                                                    style={{\n                                                        backgroundImage: `url(${Comment})`,\n                                                        backgroundSize: \"cover\",\n                                                        backgroundRepeat: \"no-repeat, repeat\",\n\n                                                    }}\n                                                >\n                                                    <div\n                                                        style={{\n                                                            position: 'absolute',\n                                                            top: '50%',\n                                                            height: \"40%\",\n                                                            width: '60%',\n                                                        }}\n                                                    >\n                                                        <div className=\"flex flex-col h-full overflow-hidden\">\n                                                            <main className=\"flex-1 overflow-y-auto\">\n                                                                <div className=\"flex flex-col w-full\">\n\n                                                                    {\n                                                                        newsfeedData?.comments?.map((comment, key) => (\n\n                                                                            <div className=\"mt-5 pl-4\" key={key}>\n                                                                                <div className=\"flex flex-row p-2 items-baseline\">\n                                                                                    <div className=\"basis-1/5\">\n                                                                                        <div className=\"avatar\">\n                                                                                            <div className=\"w-10 rounded-full\">\n                                                                                                <img src={comment.user_image || emptyProfile} />\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                    <div className=\"basis-1/1\">\n\n                                                                                        <div className=\"card w-56 bg-base-200 card-compact\">\n                                                                                            <div className=\"card-body\">\n                                                                                                <strong className=\"card-title text-white\">{comment.user_name}</strong>\n                                                                                                <p className=\"text-white-400 text-xs font-givenget\">\n                                                                                                    {comment.comment}\n                                                                                                </p>\n                                                                                            </div>\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n\n                                                                        ))\n                                                                    }\n\n\n                                                                </div>\n                                                            </main>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div style={{ position: \"absolute\" }}>\n                                        <Lottie\n                                            options={defaultOptions}\n                                            height=\"100%\"\n                                            width=\"100%\"\n                                            isClickToPauseDisabled={true}\n                                            style={{ cursor: \"default\" }}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"lg:py-2\">\n                                <h1 className=\"text-4xl font-bold font-givenget sm:text-7xl text-white\">\n                                    {newsfeedData?.title}\n                                </h1>\n                                <div className=\"mt-4\">\n                                    {/* {truncateString(challengeData?.description, 500)} */}\n                                    <ReactMarkdown children={newsfeedData?.content} />\n                                </div>\n\n                                <div className=\"flex flex-row mt-5 gap-x-5 items-center \">\n                                    <div>\n                                        <div\n                                            style={{ cursor: \"pointer\" }}\n                                            className=\"flex mt-3 w-auto p-5 h-14 bg-black text-white rounded-xl items-center justify-center transition hover:rotate-2 hover:scale-110\"\n                                        >\n                                            <div className=\"mr-3\">\n                                                <svg viewBox=\"0 0 384 512\" width={30}>\n                                                    <path\n                                                        fill=\"currentColor\"\n                                                        d=\"M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z\"\n                                                    />\n                                                </svg>\n                                            </div>\n                                            <div>\n                                                <div className=\"text-xs\">Download on the</div>\n                                                <div className=\"text-sm font-semibold font-sans -mt-1\">\n                                                    App Store\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <div\n                                            style={{ cursor: \"pointer\" }}\n                                            className=\"flex mt-3 w-auto p-5 h-14 bg-black text-white rounded-lg items-center justify-center transition hover:-rotate-2 hover:scale-110\"\n                                        >\n                                            <div className=\"mr-3\">\n                                                <svg viewBox=\"30 336.7 120.9 129.2\" width={30}>\n                                                    <path\n                                                        fill=\"#FFD400\"\n                                                        d=\"M119.2,421.2c15.3-8.4,27-14.8,28-15.3c3.2-1.7,6.5-6.2,0-9.7  c-2.1-1.1-13.4-7.3-28-15.3l-20.1,20.2L119.2,421.2z\"\n                                                    />\n                                                    <path\n                                                        fill=\"#FF3333\"\n                                                        d=\"M99.1,401.1l-64.2,64.7c1.5,0.2,3.2-0.2,5.2-1.3  c4.2-2.3,48.8-26.7,79.1-43.3L99.1,401.1L99.1,401.1z\"\n                                                    />\n                                                    <path\n                                                        fill=\"#48FF48\"\n                                                        d=\"M99.1,401.1l20.1-20.2c0,0-74.6-40.7-79.1-43.1  c-1.7-1-3.6-1.3-5.3-1L99.1,401.1z\"\n                                                    />\n                                                    <path\n                                                        fill=\"#3BCCFF\"\n                                                        d=\"M99.1,401.1l-64.3-64.3c-2.6,0.6-4.8,2.9-4.8,7.6  c0,7.5,0,107.5,0,113.8c0,4.3,1.7,7.4,4.9,7.7L99.1,401.1z\"\n                                                    />\n                                                </svg>\n                                            </div>\n                                            <div>\n                                                <div className=\"text-xs\">GET IT ON</div>\n                                                <div className=\"text-sm font-semibold font-sans -mt-1 \">\n                                                    Google Play\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n\n    )\n}\n\nexport default PostMain","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\n// components\nimport Layout from '../../components/layout'\nimport PostMain from '../../components/post/PostMain'\n\nconst id = ({ serverData }) => {\n  return (\n    <>\n      <Helmet>\n        <title>{serverData?.title}</title>\n        <meta name=\"description\" content={serverData?.description} />\n        <meta property=\"og:image\" content={serverData?.photo} />\n        <meta property=\"og:title\" content={serverData?.title} />\n        <meta property=\"og:description\" content={serverData?.description} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:creator\" content={'give&get'} />\n        <meta name=\"twitter:title\" content={serverData?.title} />\n        <meta name=\"twitter:description\" content={serverData?.description} />\n      </Helmet>\n\n      <Layout>\n        <PostMain newsfeedData={serverData} />\n      </Layout>\n\n    </>\n  )\n}\n\nexport async function getServerData({ params }) {\n  const { id } = params\n\n  try {\n    \n    const res = await fetch(`https://api.givenget.org/api/landing/posts/${id}`, {\n      method: `GET`,\n    })\n    \n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n\n    return {\n      status: 200,\n      props: await res.json(),\n    }\n    \n  } catch (error) {\n    return {\n      status: 404,\n      props: {}, \n    }\n  }\n\n}\n\nexport default id","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","stringifyPosition","position","point","index","line","column","pos","start","end","VFileMessage","Error","reason","place","origin","parts","super","undefined","indexOf","slice","this","message","stack","fatal","source","ruleId","file","actual","expected","url","note","path","basename","ext","TypeError","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","data","messages","history","stored","map","prop","includes","assertNonEmpty","push","assertPart","stem","encoding","info","fail","part","bail","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","output","fn","middleware","called","wrapped","parameters","fnExpectsCallback","done","apply","Promise","then","wrap","use","middelware","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","parse","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","type","asyncName","Boolean","looksLikeAVFile","one","includeImageAlt","alt","children","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","all","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","extensions","combineExtensions","concat","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","combined","u","props","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","lines","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","property","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","style","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","whitespace","thing","valid","dash","cap","kebab","camelcase","charAt","hastToReact","protocols","uriTransformer","uri","trim","first","colon","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","schema","addProperty","listDepth","component","components","basic","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","v","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","defaultOptions","autoplay","animationData","shapeAnimation","rendererSettings","newsfeedData","zIndex","backgroundImage","Comment","backgroundSize","backgroundRepeat","top","comments","user_image","emptyProfile","user_name","isClickToPauseDisabled","serverData","Helmet","description","photo","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","m","c","val","ret","decl","decls","declarations","isBuffer","b","for","e","f","g","l","n","p","q","t","a","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","StyleToObject","hasIterator","len"],"sourceRoot":""}