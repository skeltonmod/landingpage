{"version":3,"file":"component---src-pages-challenge-[id]-js-ade8c0934de5a6ebe064.js","mappings":"oKA4CA,UAzCW,IAAyB,IAAxB,GAAEA,EAAE,WAAEC,GAAY,EAE5B,OADAC,QAAQC,IAAIH,EAAIC,GAEd,gBAAC,IAAM,KACL,6BAAQA,EAAWG,OACnB,wBAAMC,KAAK,cAAcC,QAASL,EAAWM,cAC7C,wBAAMC,SAAS,WAAWF,QAASL,EAAWQ,QAC9C,wBAAMD,SAAS,WAAWF,QAASL,EAAWG,QAC9C,wBAAMI,SAAS,iBAAiBF,QAASL,EAAWM,cACpD,wBAAMC,SAAS,UAAUF,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,QAAS,aACtC,wBAAMD,KAAK,gBAAgBC,QAASL,EAAWG,QAC/C,wBAAMC,KAAK,sBAAsBC,QAASL,EAAWM,cAC9C,C","sources":["webpack://gatsby-starter-default/./src/pages/challenge/[id].js"],"sourcesContent":["import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst id = ({ id, serverData }) => {\n  console.log(id, serverData)\n  return (\n    <Helmet>\n      <title>{serverData.title}</title>\n      <meta name=\"description\" content={serverData.description} />\n      <meta property=\"og:image\" content={serverData.image} />\n      <meta property=\"og:title\" content={serverData.title} />\n      <meta property=\"og:description\" content={serverData.description} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={'give&get'} />\n      <meta name=\"twitter:title\" content={serverData.title} />\n      <meta name=\"twitter:description\" content={serverData.description} />\n    </Helmet>\n  )\n}\n\nexport async function getServerData({ params }) {\n  const { id } = params\n  try {\n    const res = await fetch(`https://api.givenget.org/api/lp/challenge/${id}`, {\n      method: `GET`,\n    })\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n\n}\n\nexport default id"],"names":["id","serverData","console","log","title","name","content","description","property","image"],"sourceRoot":""}